name: SonarCloud Analysis

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Disable shallow clone for better analysis
        
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'temurin'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      
    - name: Build and run tests with coverage
      run: ./gradlew clean build test jacocoTestReport --info --stacktrace
      
    - name: Verify coverage report exists
      run: |
        echo "Checking for Jacoco report..."
        find . -name "jacocoTestReport.xml" -type f
        ls -la app/build/reports/jacoco/test/ || echo "Directory not found"
        
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=kealmahe2003_SistemaPOS
          -Dsonar.organization=kealmahe2003
          -Dsonar.java.source=21
          -Dsonar.java.target=21
          -Dsonar.sources=app/src/main/java
          -Dsonar.tests=app/src/test/java
          -Dsonar.java.binaries=app/build/classes/java/main
          -Dsonar.java.test.binaries=app/build/classes/java/test
          -Dsonar.coverage.jacoco.xmlReportPaths=app/build/reports/jacoco/test/jacocoTestReport.xml
          -Dsonar.junit.reportPaths=app/build/test-results/test
          -Dsonar.test.inclusions=**/*Test.java,**/*Tests.java,**/*TestCompleto.java
          -Dsonar.coverage.exclusions=**/Main.java,**/Application.java,**/*Controller.java,**/views/**,**/*.fxml,**/*.css
          -Dsonar.exclusions=**/build/**,**/*.properties,**/*.fxml,**/*.css,list/**,utilities/**,buildSrc/**,gradle/**
          -Dsonar.gradle.skipCompile=true
          -Dsonar.verbose=true
